<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lejin&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-17T07:22:00.928Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lejinwang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用IDEA docker插件将springboot项目封装成docker服务</title>
    <link href="http://yoursite.com/2019/09/17/docker20190917/"/>
    <id>http://yoursite.com/2019/09/17/docker20190917/</id>
    <published>2019-09-17T11:11:33.000Z</published>
    <updated>2019-09-17T07:22:00.928Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文讲述如何将IDEA中的springboot项目部署到centos7系统中利用IDEA docker 插件封装成docker服务</p></blockquote><h2 id="1-系统环境"><a href="#1-系统环境" class="headerlink" title="1 系统环境"></a>1 系统环境</h2><h3 id="1-1-Centos7-如何在VMware中安装Centos7系统"><a href="#1-1-Centos7-如何在VMware中安装Centos7系统" class="headerlink" title="1.1 Centos7 (如何在VMware中安装Centos7系统?)"></a>1.1 Centos7 (<a href>如何在VMware中安装Centos7系统?</a>)</h3><h3 id="1-2-docker-如何在Centos7安装docker"><a href="#1-2-docker-如何在Centos7安装docker" class="headerlink" title="1.2 docker( 如何在Centos7安装docker?)"></a>1.2 docker( <a href="https://lejinwang.github.io/2019/09/08/categories1/" target="_blank" rel="noopener">如何在Centos7安装docker?</a>)</h3><h3 id="1-3-jdk-如何在Centos7中安装JDK"><a href="#1-3-jdk-如何在Centos7中安装JDK" class="headerlink" title="1.3 jdk ( 如何在Centos7中安装JDK?)"></a>1.3 jdk ( <a href="https://lejinwang.github.io/2019/09/08/categories1/" target="_blank" rel="noopener">如何在Centos7中安装JDK?</a>)</h3><h2 id="2-项目配置"><a href="#2-项目配置" class="headerlink" title="2 项目配置"></a>2 项目配置</h2><h3 id="2-1-MakeFile"><a href="#2-1-MakeFile" class="headerlink" title="2.1 MakeFile"></a>2.1 MakeFile</h3><ul><li>Step 1：在项目（Demo）根目录创建Dockerfile文件<br><code>Demo/Dockerfile</code></li><li><p>Step 2：编写Dockerfile<br>Dokcerfile基本格式如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FROM &lt;image&gt;[:&lt;tag&gt;]</span><br><span class="line"><span class="comment">//指定基础镜像，需要保证选用的基础镜像满足本</span></span><br><span class="line"><span class="comment">//项目所依赖的环境最常见的就是java或者java+其他语言环境</span></span><br><span class="line"><span class="comment">//&lt;image&gt;：指定作为base image的名称；</span></span><br><span class="line"><span class="comment">// &lt;tag&gt;：base image的标签，为可选项，省略时默认为latest；</span></span><br><span class="line">COPY &lt;directory&gt;or&lt;filename&gt; &lt;directory&gt;or&lt;filename&gt;</span><br><span class="line"><span class="comment">//需要将文件复制到镜像中使用</span></span><br><span class="line"><span class="comment">//&lt;directory&gt;or&lt;filename&gt;：前一个是本地目录下的所有文件（包括该目录下的文件夹）或单个文件名</span></span><br><span class="line"><span class="comment">//（可相对Makefile文件位置使用相对路径也可使用绝对路径）</span></span><br><span class="line"><span class="comment">//后一个则是镜像中位置或复制文件后的文件名，如果是复制文件可重新指定文件名。</span></span><br><span class="line">ADD &lt;directory&gt;or&lt;filename&gt; &lt;directory&gt;or&lt;filename&gt;</span><br><span class="line"><span class="comment">//与COPY类似，ADD支持使用TAR文件和URL路径，并且会将tar文件展开，如果指定的是url，</span></span><br><span class="line"><span class="comment">//会从指定的url下载文件放到目录中（ 如果url下载的文件为tar文件，则不会展开）</span></span><br><span class="line">ADD name-version.jar app.jar</span><br><span class="line"><span class="comment">//name和version要与pom.xml对应</span></span><br><span class="line">ENTRYPOINT &lt;指令&gt;</span><br><span class="line"><span class="comment">//容器启动执行的命令</span></span><br></pre></td></tr></table></figure></li><li><p>实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM openjdk:<span class="number">8</span>-jdk-alpine</span><br><span class="line">VOLUME /tmp</span><br><span class="line">ADD /target/demo<span class="number">-0.0</span><span class="number">.1</span>-SNAPSHOT.jar app.jar</span><br><span class="line">ENTRYPOINT [<span class="string">"java"</span>,<span class="string">"-Djava.security.egd=file:/dev/./urandom"</span>,<span class="string">"-jar"</span>,<span class="string">"/app.jar"</span>]</span><br><span class="line"><span class="comment">// demo-0.0.1-SNAPSHOT.jar 是你的项目IDEA mave打包后jar文件，具体名称可在pom.xml中查看，默认是 项目名称-0.0.1.SNAPSHOT.jar</span></span><br></pre></td></tr></table></figure></li><li><p>pom.xml文件这块信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--项目名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 版本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-docker-开启远程访问"><a href="#2-2-docker-开启远程访问" class="headerlink" title="2.2 docker 开启远程访问"></a>2.2 docker 开启远程访问</h3><ul><li><p>Step 1：编辑docker配置文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure><p> 修改以ExecStart为开头的 ，修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/usr/bin/dockerd -H unix://var/run/docker.sock -H tcp://0.0.0.0:2375</span><br></pre></td></tr></table></figure> <font style="color:Rgb(0,154,97);font-weight:520">注：2375是你为docker配置的访问的端口，可以是其它值</font></li><li><p>Step 2：更新修改</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></li><li><p>Step 3：重启docker服务</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure> <font style="color:Rgb(0,154,97);font-weight:520">注：这里可以试着直接在Centos7系统下测试，输入命令：<br> <code>curl http://localhost:2375/version</code><br> 成功输出版本信息，则表明配置成功，之后在浏览器测试，不过一般都会提示无法访问，需要下面的开启2375端口的步骤，碰到端口无法访问（长时间无反应）可能就是防火墙端口未开启。</font></li><li><p>Step 4：开启Centos7 防火墙2375端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=2375/tcp --permanent</span><br><span class="line"><span class="comment"># 正常执行后会输出success</span></span><br></pre></td></tr></table></figure></li><li><p>Step 5：重启防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li><p>Step 6：测试</p><p>在主机浏览器输入<code>http://IP:2375/version</code>，可以看到输出了版本信息，至此docker开启远程访问成功。</p><h3 id="2-3-IDEA-配置"><a href="#2-3-IDEA-配置" class="headerlink" title="2.3 IDEA 配置"></a>2.3 IDEA 配置</h3></li><li><p>Step 1：下载docker插件</p><p><code>IDEA --&gt; File --&gt;Settings --&gt; Plugins --&gt; 搜索docker --&gt; 安装Docker integraiton</code></p></li><li><p>Step 2：docker插件配置</p><p><code>IDEA --&gt; File --&gt;Settings --&gt; Build,Execution,Deployment</code><br><code>--&gt; Docker --&gt; 增加一个docker远程链接</code><br>修改<code>Tcp socket</code> 为<code>tcp://你的IP:2375</code>会提示链接成功，点击<code>OK</code>。<br>IDEA 下方会有docker图标出现，点击启动,可以远程可视化操作docker images</p><font style="color:Rgb(0,154,97);font-weight:520">注：<code>tcp://你的IP:2375</code>只是对于Linux系统下的docker，windows系统格式不一样</font></li><li><p>Step 3：打包配置</p><p><code>IDEA --&gt; Run --&gt; Edit Configuartion</code><br>增加一个docker服务，以dockerfile的形式。<br><code>Name</code>：命名<br><code>Server</code>：选择你的目标docker<br><code>Dockerfile</code>：你的Dockerfile文件<br><code>Image tag</code>：镜像标签（不设置默认latest）<br><code>Container name</code>：容器名（不设置系统会随便取个名<br><code>Bind ports</code>：绑定端口（主机端口：容器端口（默认8080））<br><code>Command preview</code>：可以预览你配置后将要执行的命令。<br>由于dockerfile里面配置的是项目jar文件封装，所以我们差一个项目打包后的jar文件，当然你可以手动打包，但没必要，因为在这个配置页面最后一栏有个<code>Before launch</code>配置项，我们可以将maven打包命令写在这里。如：clean package。添加maven命令成功后会显示：Run Maven Goal ‘项目名:clean package’。<br>点击<code>OK</code>,配置完成。<br><font style="color:Rgb(0,154,97);font-weight:520">注：<code>clean package</code>命令会将打包后的jar放在/target/目录下，所以Dockerfile里面是<code>ADD /target/项目名-0.0.1-SNAPSHOT.jar app.jar</code>。</font><br>点击<code>RUN</code></p></li><li><p>Step 4：运行</p><p>在idea右上方会有刚才配置的执行脚本，点击执行。不出意外，接下来就是等待服务封装成功了。</p></li><li><p>Step 5：验证</p><p>查看镜像是否创建成功，docker images也可直接看IDEA docker插件可视化管理栏。<br>访问服务进行验证，容器log栏可以看输出信息。</p></li></ul><blockquote><p>至此将springboot服务 封装成docker服务就成了。这篇文章内容，包含了如何打包springboot成jar以及如何将springboot服务封装成jar，较之前我写的两篇博客更加简单。但是使用插件虽然简单，但是容易出错，特别是比较复杂的项目，本人的建议是，简单的docker服务：只涉及跨平台语言环境（比如java）、依赖较少的项目可以使用本博客的方法。较为复杂的项目，如果使用插件出错了，可使用另外我写的方法。</p></blockquote><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>  <a href="https://blog.csdn.net/w57685321/article/details/79339740" target="_blank" rel="noopener">https://blog.csdn.net/w57685321/article/details/79339740</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文讲述如何将IDEA中的springboot项目部署到centos7系统中利用IDEA docker 插件封装成docker服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-系统环境&quot;&gt;&lt;a href=&quot;#1-系统环境&quot; class=
      
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Docker" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/Docker/"/>
    
    
      <category term="Centos7" scheme="http://yoursite.com/tags/Centos7/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="IDEA" scheme="http://yoursite.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>利用maven将springboot项目封装成docker服务</title>
    <link href="http://yoursite.com/2019/09/16/docker20190916/"/>
    <id>http://yoursite.com/2019/09/16/docker20190916/</id>
    <published>2019-09-16T11:11:33.000Z</published>
    <updated>2019-09-19T01:31:44.237Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文讲述如何将idea中的springboot项目部署到centos7系统中利用maven封装成docker服务</p></blockquote><h2 id="1-系统环境"><a href="#1-系统环境" class="headerlink" title="1 系统环境"></a>1 系统环境</h2><h3 id="1-1-Centos7-如何在VMware中安装Centos7系统"><a href="#1-1-Centos7-如何在VMware中安装Centos7系统" class="headerlink" title="1.1 Centos7 (如何在VMware中安装Centos7系统?)"></a>1.1 Centos7 (<a href>如何在VMware中安装Centos7系统?</a>)</h3><h3 id="1-2-docker-如何在Centos7安装docker"><a href="#1-2-docker-如何在Centos7安装docker" class="headerlink" title="1.2 docker( 如何在Centos7安装docker?)"></a>1.2 docker( <a href="https://lejinwang.github.io/2019/09/08/categories1/" target="_blank" rel="noopener">如何在Centos7安装docker?</a>)</h3><h3 id="1-3-jdk-如何在Centos7中安装JDK"><a href="#1-3-jdk-如何在Centos7中安装JDK" class="headerlink" title="1.3 jdk ( 如何在Centos7中安装JDK?)"></a>1.3 jdk ( <a href="https://lejinwang.github.io/2019/09/08/categories1/" target="_blank" rel="noopener">如何在Centos7中安装JDK?</a>)</h3><h3 id="1-4-maven"><a href="#1-4-maven" class="headerlink" title="1.4 maven"></a>1.4 maven</h3><ul><li><p>Step 1： 安装wget工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br></pre></td></tr></table></figure></li><li><p>Step2：使用配置工具配置第三方epel源仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo</span><br></pre></td></tr></table></figure></li><li><p>Step3： 安装maven</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y apache-maven</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-项目配置"><a href="#2-项目配置" class="headerlink" title="2 项目配置"></a>2 项目配置</h2><h3 id="2-1-MakeFile"><a href="#2-1-MakeFile" class="headerlink" title="2.1 MakeFile"></a>2.1 MakeFile</h3><ul><li>Step 1：在项目main/docker/目录创建Dockerfile文件<br><code>src/main/docker/Dockerfile</code></li><li><p>Step 2：编写Dockerfile<br>Dokcerfile基本格式如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FROM &lt;image&gt;[:&lt;tag&gt;]</span><br><span class="line"><span class="comment">//指定基础镜像，需要保证选用的基础镜像满足本</span></span><br><span class="line"><span class="comment">//项目所依赖的环境最常见的就是java或者java+其他语言环境</span></span><br><span class="line"><span class="comment">//&lt;image&gt;：指定作为base image的名称；</span></span><br><span class="line"><span class="comment">// &lt;tag&gt;：base image的标签，为可选项，省略时默认为latest；</span></span><br><span class="line">COPY &lt;directory&gt;or&lt;filename&gt; &lt;directory&gt;or&lt;filename&gt;</span><br><span class="line"><span class="comment">//需要将文件复制到镜像中使用</span></span><br><span class="line"><span class="comment">//&lt;directory&gt;or&lt;filename&gt;：前一个是本地目录下的所有文件（包括该目录下的文件夹）或单个文件名</span></span><br><span class="line"><span class="comment">//（可相对Makefile文件位置使用相对路径也可使用绝对路径）</span></span><br><span class="line"><span class="comment">//后一个则是镜像中位置或复制文件后的文件名，如果是复制文件可重新指定文件名。</span></span><br><span class="line">ADD &lt;directory&gt;or&lt;filename&gt; &lt;directory&gt;or&lt;filename&gt;</span><br><span class="line"><span class="comment">//与COPY类似，ADD支持使用TAR文件和URL路径，并且会将tar文件展开，如果指定的是url，</span></span><br><span class="line"><span class="comment">//会从指定的url下载文件放到目录中（ 如果url下载的文件为tar文件，则不会展开）</span></span><br><span class="line">ADD name-version.jar app.jar</span><br><span class="line"><span class="comment">//name和version要与pom.xml对应</span></span><br><span class="line">ENTRYPOINT &lt;指令&gt;</span><br><span class="line"><span class="comment">//容器启动执行的命令</span></span><br></pre></td></tr></table></figure></li><li><p>实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM wanglejin/centosjavagcc:v1<span class="number">.0</span></span><br><span class="line">VOLUME /tmp</span><br><span class="line">ADD casa<span class="number">-1.1</span>b casa<span class="number">-1.1</span>b</span><br><span class="line">ADD real_casa<span class="number">-1.0</span>.jar app.jar</span><br><span class="line">ENTRYPOINT [<span class="string">"java"</span>,<span class="string">"-Djava.security.egd=file:/dev/./urandom"</span>,<span class="string">"-jar"</span>,<span class="string">"/app.jar"</span>]</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-pom-xml"><a href="#2-2-pom-xml" class="headerlink" title="2.2 pom.xml"></a>2.2 pom.xml</h3><ul><li><p>step 1：增加docker maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Docker maven plugin --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spotify<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>docker-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">imageName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">imageName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dockerDirectory</span>&gt;</span>src/main/docker<span class="tag">&lt;/<span class="name">dockerDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>$&#123;project.build.finalName&#125;.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Docker maven plugin --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>step 2：指定生成jar文件名和版本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.neo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>real_casa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--新增--&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>完整pom.xml实例<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.neo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>real_casa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-boot-docker<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">docker.image.prefix</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">docker.image.prefix</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/net.sourceforge.jeval/jeval --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sourceforge.jeval<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jeval<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.udojava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>EvalEx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>20180813<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Docker maven plugin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spotify<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>docker-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">imageName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">imageName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dockerDirectory</span>&gt;</span>src/main/docker<span class="tag">&lt;/<span class="name">dockerDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>$&#123;project.build.finalName&#125;.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Docker maven plugin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>实例源码下载：<a href="https://github.com/lejinWang/real_casa" target="_blank" rel="noopener">real_casa</a>（涉及java+C语言环境，casa-1.1b为C语言程序可执行文件，编写自己的项目时可删除无关文件）</p><h3 id="2-3-打包封装"><a href="#2-3-打包封装" class="headerlink" title="2.3 打包封装"></a>2.3 打包封装</h3><ul><li><p>Step 1：部署</p><p>将配置好的项目复制到Centos7中，可以使用文件传输工具也可以利用版本控制工具git。</p></li><li><p>Step 2：打包</p><p>进入项目根目录，执行命令<code>mvn package -Dmaven.test.skip=true docker:build</code></p></li><li><p>Step 3：查看</p><p><code>docker images</code>查看新生成的镜像</p></li><li><p>Step 4：运行</p><p><code>docker run -it -p 主机端口:8080（默认） 镜像名 /bin/bash（bin/sh）</code></p><p><code>docker ps</code>展示所有在运行的容器</p></li></ul><ul><li><p>Step 5：验证</p><p> 访问<code>https//IP:8080</code></p></li><li><p>Step 6：上传镜像</p><p><code>docker login</code></p><p><code>docker tag 镜像id wanglejin/real_casa:v1.0</code></p><p><code>docker push</code></p></li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>   <a href="https://www.cnblogs.com/zscc/articles/9428466.html" target="_blank" rel="noopener">https://www.cnblogs.com/zscc/articles/9428466.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文讲述如何将idea中的springboot项目部署到centos7系统中利用maven封装成docker服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-系统环境&quot;&gt;&lt;a href=&quot;#1-系统环境&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Docker" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/Docker/"/>
    
    
      <category term="Centos7" scheme="http://yoursite.com/tags/Centos7/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>在Centos7搭建springboot+docker+mysql+redis+conductor+tomcat环境</title>
    <link href="http://yoursite.com/2019/09/08/categories1/"/>
    <id>http://yoursite.com/2019/09/08/categories1/</id>
    <published>2019-09-08T08:02:49.000Z</published>
    <updated>2019-09-16T11:07:04.467Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文讲述本人在阿里云服务器（操作系统为Centos7）搭建CitHub系统环境的记录，旨在日后的温习以及后人参阅。</p></blockquote><!-- # 前期准备 --><h2 id="1-Centos7系统"><a href="#1-Centos7系统" class="headerlink" title="1 Centos7系统"></a>1 Centos7系统</h2><ul><li><p><strong>Windows系统</strong> 下可利用虚拟机，例   如<font style="color: #ec7259;font-weight:bold">VMware</font>，本人在windows环境下测试CitHub系统时就是利用的VMware，至于具体的<font style="color: #ec7259;font-weight:bold">“如何在VMware安装Centos7系统VMware？”</font>请关注后续更新，这里就不展开了。</p></li><li><p><strong>阿里云服务器</strong> 租用时可直接选择所安装 的系统，所以无需考虑Centos7系统的问题。</p><font style="color:Rgb(0,154,97);font-weight:520">注：下文环境搭建均是在阿里云服务器进行</font></li></ul><h2 id="2-docker配置"><a href="#2-docker配置" class="headerlink" title="2 docker配置"></a>2 docker配置</h2><ul><li><p><b>Step 1: 安装必要的一些系统工具</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils  device- mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure></li><li><p><b>Step 2: 添加软件源信息</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p><b>Step 3: 更新并安装Docker-CE</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure></li><li><p><b>Step 4: 开启Docker服务</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker star</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-mysql配置"><a href="#3-mysql配置" class="headerlink" title="3 mysql配置"></a>3 mysql配置</h2><ul><li><p><b>Step 1:依次输入如下命令</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql</span><br><span class="line">yum install mysql-devel</span><br><span class="line">wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure></li><li><p><b>Step 2:重启mysql服务</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure></li><li><p><b>Step 3:设置编码</b><br>进入配置文件<code>Vi /etc/my.cnf</code>在末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">Default-character-set =utf8</span><br></pre></td></tr></table></figure></li><li><p><b>Step 4:登录mysql</b>（初次安装mysql时，root账户没有密码）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root</span><br></pre></td></tr></table></figure><p>进入mysql操作窗口</p></li><li><p><b>Step 5:设置用户名密码</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> password <span class="keyword">for</span>   root@localhost = password(<span class="string">'123456'</span>);</span><br></pre></td></tr></table></figure></li><li><p><b>Step 6:设置远程连接某个database</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all privileges on ctest.* to gist@<span class="string">'%'</span> identified by <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure><p>&ensp;&ensp;&ensp;其中ctest是database名，ctest.* 表示可以访问databas名为ctest的所有table，gist表示用于远程连接的用户名。</p></li></ul><h2 id="4-redis配置"><a href="#4-redis配置" class="headerlink" title="4 redis配置"></a>4 redis配置</h2><p>  可以参考这篇博客<a href="https://www.cnblogs.com/zuidongfeng/p/8032505.html" target="_blank" rel="noopener">CENTOS7下安装REDIS</a>，讲的很详细。下面主要是设置redis开机自启动</p><ul><li><p><b>Step 1:进入配置文件</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/redis-server.service</span><br></pre></td></tr></table></figure></li><li><p><b>Step 2:添加内容</b></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The redis-server Process Manager</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">PIDFile=/var/run/redis_6379.pid</span><br><span class="line">ExecStart=/usr/local/redis/redis-server /usr/local/redis/redis.conf         </span><br><span class="line">ExecReload=/bin/kill -USR2 $MAINPID</span><br><span class="line">ExecStop=/bin/kill -SIGINT $MAINPID</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p><b>Step 3:设置开机自启动</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start redis-server.service</span><br><span class="line">systemctl <span class="built_in">enable</span> redis-server.service</span><br></pre></td></tr></table></figure></li><li><p><b>Step 4:检查是否安装成功</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -A|grep redis</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-jdk配置"><a href="#5-jdk配置" class="headerlink" title="5 jdk配置"></a>5 jdk配置</h2><ul><li><b>Step 1:下载安装包</b><br>最好是访问<a href="https://www.oracle.com/java/technologies/javase-jsp-downloads.html" target="_blank" rel="noopener">官网</a>，注册登录之后可免费下载各个版本的安装包，注意选择<strong>Linux系统</strong>的安装包（本人选择的是<font color="rgb(163,145,191)">jdk-8u11-linux-x64.tar.gz</font>)</li><li><p><b>Step 2:卸载centos原本自带的openjdk</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java</span><br></pre></td></tr></table></figure><p>然后通过<code>rpm -e --nodeps code</code>  后面跟系统自带的jdk名    这个命令来删除系统自带的jdk，例如<code>rpm -e --nodeps java-1.8.0-openjdk-1.8.0.102-4.b14.el7.x86_64</code></p></li><li><p><b>Step 3:在/home目录下新建java目录</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir java</span><br></pre></td></tr></table></figure></li><li><p><b>Step 4:将jdk安装包传到这个目录下</b><br>这里推荐一个传输工具<a href="http://www.pc6.com/softview/SoftView_69972.html" target="_blank" rel="noopener">ssh secure shell client</a>，通过ssh传输东西十分方便。</p></li><li><p><b>Step 5:解压压缩包</b>（在该文件目录下）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u11-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p><b>Step 6:配置环境</b><br><code>vi  /etc/profile</code>，在最后添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/java/jdk1.8.0_11</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure></li><li><p><b>Step 7:生效配置 </b><br>运行：<code>. /etc/profile</code>         点和/之间有个空格，然后<code>java -version</code> 查看是否成功输出版本信息。</p></li></ul><h2 id="6-tomcat配置"><a href="#6-tomcat配置" class="headerlink" title="6 tomcat配置"></a>6 tomcat配置</h2><ul><li><b>Step 1:下载tomcat安装包</b><br>去<a href="https://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">tomcat官网下载</a>，选择Core类别下tar.gz包，本人选用的是<a href="https://www-us.apache.org/dist/tomcat/tomcat-9/v9.0.24/bin/apache-tomcat-9.0.24.tar.gz" target="_blank" rel="noopener">apache-tomcat-9.0.24.tar.gz</a>。</li><li><b>Step 2:将安装包上传到服务器</b><br>依然是通过<a href="http://www.pc6.com/softview/SoftView_69972.html" target="_blank" rel="noopener">ssh secure shell client</a>工具。</li><li><p><b>Step 3:在tomcat目录下解压</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-9.0.24.tar.gz</span><br></pre></td></tr></table></figure></li><li><p><b>Step 4:启动tomcat</b><br><code>/bin</code>目录下，执行命令 <code>./startup.sh</code></p></li><li><b>Add 1:关闭tomcat</b><br><code>/bin</code> 目录下执行命令<code>./shutdown</code><br>由于本人在关闭tomcat时发现有时候会出现tomcat无法完全关闭的情况，也就是关闭tomcat之后，再启动时出现端口被占用情况，为此我想到的解决办法是，通过查询tomcat端口所在进程号，通过进程号终止tomcat运行。例如我的tomcat占用的是默认端口号：8080，那么可以先通过<code>lsof -i:8080</code>得到PID（进程号），然后通过<code>kill -9 PID</code>结束进程。</li><li><b>Add 2:更改tomcat端口号</b><br>只需修改conf目录下server.xml文件，将8080更改为你想设置的端口号，本人考虑到后续conductor服务所占端口正是8080，遂改为8686。<br><br><font style="color:Rgb(0,154,97);font-weight:1">注：所设置的端口号，必须是阿里云所开放的端口号，阿里云开发的端口号可以通过控制台网络配置-&gt;配置规则进行设置</font></li></ul><h2 id="7-conductor配置"><a href="#7-conductor配置" class="headerlink" title="7 conductor配置"></a>7 conductor配置</h2><ul><li><b>Step 1:获取conductor运行包</b><br> 有三种方式具体可以看<a href="https://netflix.github.io/conductor/server/" target="_blank" rel="noopener">conductor官网介绍</a>。本人采用第二种方式也就是直接在<a href="https://repo1.maven.org/maven2/com/netflix/conductor/conductor-server/" target="_blank" rel="noopener">mvn repository</a>下载得到。</li><li><b>Step 2: 运行conductor</b><br>直接在该文件目录下执行 <code>java -jar  conductor.jar</code>便可。</li><li>Add 1:后台运行jar文件 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar jarname.jar  &gt;log2.file  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>到此系统运行所需环境已经全部搭建好了</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文讲述本人在阿里云服务器（操作系统为Centos7）搭建CitHub系统环境的记录，旨在日后的温习以及后人参阅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- # 前期准备 --&gt;
&lt;h2 id=&quot;1-Centos7系统&quot;&gt;&lt;a href=&quot;#1
      
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="部署" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="Centos7" scheme="http://yoursite.com/tags/Centos7/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>将springboot项目打包成jar</title>
    <link href="http://yoursite.com/2019/09/08/categories2/"/>
    <id>http://yoursite.com/2019/09/08/categories2/</id>
    <published>2019-09-08T00:47:37.709Z</published>
    <updated>2019-09-16T11:11:57.760Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>编写好一个springboot项目往往需要将它打包成jar文件部署到服务器上去，那么如何打包呢？</p></blockquote><p> <font style="color:Rgb(0,154,97);font-weight:520">注：下文打包过程均在本人coding工具——idea中进行。</font></p><h3 id="按步骤"><a href="#按步骤" class="headerlink" title="按步骤"></a>按步骤</h3><ul><li><h4><b>Step 1:选择打包方式</b></h4><p><code>idea</code> –&gt; <code>File</code> –&gt; <code>Project Structure</code> –&gt; <code>Artifacts</code> –&gt; <code>add JAR</code> –&gt; <code>From modules with dependencies...</code></p></li><li><p></p><h4><b>Step 2:选择项目和入口类</b></h4><br><code>Module</code>:项目名<br><code>MainClass</code>:主类名<br><code>JAR files from lib</code>:copy to the output directory…<br><code>Directory</code>:默认是java目录下，修改默认值为src目录下或src/main/resources目录下。<p></p></li><li><p></p><h4><b>Step 3:选择打包类型和输出目录</b></h4><br><code>Type</code>:Other<br><code>Output directory</code>:(可自定义打包后jar文件输出目录)<br>点击OK<p></p></li><li><p></p><h4><b>Step 4:打包成jar</b></h4><br><code>idea</code> –&gt; <code>Build</code> –&gt; <code>Build Artifacts</code> –&gt; 选择刚才设置的jar文件名 –&gt; <code>Build</code><p></p></li><li><h4><b>Step 5:测试生成的jar</b></h4><br>来到你设置的jar输出目录 –&gt; 打开命令行 –&gt; <code>java -jar 项目名.jar</code><br>可以看到项目成功执行，<code>idea tomcat</code> 默认端口是<code>8080</code>，注意<code>8080</code>端口别被占用了不然会执行失败。</li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a><b>参考链接</b></h3><p>  <a href="https://www.cnblogs.com/zscc/articles/9428466.html" target="_blank" rel="noopener">https://www.cnblogs.com/zscc/articles/9428466.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;编写好一个springboot项目往往需要将它打包成jar文件部署到服务器上去，那么如何打包呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;font style=&quot;color:Rgb(0,154,97);font-weight:520&quot;&gt;注：下
      
    
    </summary>
    
      <category term="后台" scheme="http://yoursite.com/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="idea" scheme="http://yoursite.com/tags/idea/"/>
    
      <category term="package" scheme="http://yoursite.com/tags/package/"/>
    
  </entry>
  
  <entry>
    <title>写一篇属于自己的博客</title>
    <link href="http://yoursite.com/2019/09/07/hello-world/"/>
    <id>http://yoursite.com/2019/09/07/hello-world/</id>
    <published>2019-09-07T13:48:59.184Z</published>
    <updated>2019-09-09T02:04:28.982Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些可能会用到的Markdown语法</p><h2 id="Markdown-基本要素"><a href="#Markdown-基本要素" class="headerlink" title="Markdown 基本要素"></a>Markdown 基本要素</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是-三级标题"><a href="#这是-三级标题" class="headerlink" title="这是 三级标题"></a>这是 三级标题</h3><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p><em>这会是 斜体 的文字</em><br><em>这会是 斜体 的文字</em></p><p><strong>这会是 粗体 的文字</strong><br><strong>这会是 粗体 的文字</strong></p><p><em>你也 <strong>组合</strong> 这些符号</em></p><p><del>这个文字将会被横线删除</del></p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li>Item 1<ul><li>Item 2a<ul><li>Item 1I</li></ul></li></ul></li><li>Item 2<ul><li>列表文本前使用 [减号+空格]</li></ul><ul><li>列表文本前使用 [加号+空格]</li></ul><ul><li>列表文本前使用 [星号+空格]<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3></li></ul></li></ul><ol><li>Item 1</li><li>Item 2</li><li><p>Item 3</p><ol><li>Item 3a</li><li>Item 3b</li><li>列表前使用 [数字+空格]</li><li>我们会自动帮你添加数字</li><li>不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3<h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3></li><li>列出所有元素：</li></ol><ul><li>无序列表元素 A<ol><li>元素 A 的有序子列表</li></ol></li><li>前面加四个空格</li></ul><ol start="2"><li>列表里的多段换行：<br>前面必须加四个空格，<br>这样换行，整体的格式不会乱</li><li>列表里引用：</li></ol><blockquote><p>前面空一行<br>仍然需要在 &gt;  前面加四个空格</p></blockquote></li></ol><ol start="4"><li><p>列表里代码段：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前面四个空格，之后按代码语法 ``` 书写</span><br></pre></td></tr></table></figure><pre><code>或者直接空八个，引入代码块</code></pre><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>正如 Kanye West 所说：</p><blockquote><p>We’re living the future so<br>the present is our past.</p></blockquote></li></ol><blockquote><p>引用文本前使用 [大于号+空格]<br>折行可以不加，新起一行都要加上哦</p></blockquote><blockquote><ul><li>这是引用里嵌套的一个列表</li><li>还可以有子列表<ul><li>子列表需要从 - 之后延后四个空格开始</li></ul></li></ul></blockquote><blockquote><pre><code>同样的，在前面加四个空格形成代码块</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 或者使用 ``` 形成代码块</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>在当前行的结尾加 2 个空格<br>这行就会新起一行</p><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>如下，三个或者更多的</p><p>连字符</p><hr><p>星号</p><hr><p>下划线</p><hr><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><ul><li style="list-style: none"><input type="checkbox" checked> @mentions, #refs, <a href>links</a>, <strong>formatting</strong>, and <del>tags</del> supported</li><li style="list-style: none"><input type="checkbox"> list syntax required (any unordered or ordered list supported)</li><li style="list-style: none"><input type="checkbox" checked> this is a complete item</li><li style="list-style: none"><input type="checkbox" checked> this is an incomplete item<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3>First  | Second | 2 |<br>———— | ————-| ————-<br>cell 1 |  cell 2 | 1 |<br>cell 1 |  cell 2 | 2 |<h3 id="代码高亮显示行数-标注第几行"><a href="#代码高亮显示行数-标注第几行" class="headerlink" title="代码高亮显示行数,标注第几行"></a>代码高亮显示行数,标注第几行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">require &apos;redcarpet&apos;</span><br><span class="line">markdown = Redcarpet.new(&quot;Hello World!&quot;)</span><br><span class="line">puts markdown.to_html</span><br></pre></td></tr></table></figure></li></ul><h3 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h3><p>30^th^<br>H~2~O</p><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>Content [^1]<br>[^1]: Hi! This is a footnote</p><h3 id="缩略"><a href="#缩略" class="headerlink" title="缩略"></a>缩略</h3><p><em>[HTML]: Hyper Text Markup Language</em>[W3C]:  World Wide Web Consortium<br>The HTML specificationis maintained by the W3C.</p><hr><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><p>==marked==</p><h3 id="图片和连接"><a href="#图片和连接" class="headerlink" title="图片和连接"></a>图片和连接</h3><p><img src="../tags/favicon.ico" alt="图片说明"></p><p>这个链接用 1 作为网址变量 [Google][1].<br>然后在文档的结尾位变量赋值（网址）<br> [1]: ../tags/favicon.ico</p><p> <a href="http://github.com" target="_blank" rel="noopener">GitHub</a><br>这个链接用 1 作为网址变量 [Google][1].<br>这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].<br>然后在文档的结尾为变量赋值（网址）<br>  [1]: <a href="http://www.google.com/" target="_blank" rel="noopener">http://www.google.com/</a><br>  [yahoo]: <a href="http://www.yahoo.com/" target="_blank" rel="noopener">http://www.yahoo.com/</a></p><h2 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>行内 HTML 元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目前只支持部分段内 HTML 元素效果，包括 <span class="tag">&lt;<span class="name">kdb</span>&gt;</span> <span class="tag">&lt;<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">em</span>&gt;</span> <span class="tag">&lt;<span class="name">sup</span>&gt;</span><span class="tag">&lt;<span class="name">sub</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="键位显示"><a href="#键位显示" class="headerlink" title="键位显示"></a>键位显示</h4><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一些可能会用到的Markdown语法&lt;/p&gt;
&lt;h2 id=&quot;Markdown-基本要素&quot;&gt;&lt;a href=&quot;#Markdown-基本要素&quot; class=&quot;headerlink&quot; title=&quot;Markdown 基本要素&quot;&gt;&lt;/a&gt;Markdown 基本要素&lt;/h2&gt;&lt;
      
    
    </summary>
    
      <category term="Markdown" scheme="http://yoursite.com/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
      <category term="first" scheme="http://yoursite.com/tags/first/"/>
    
  </entry>
  
</feed>
